{
  "name": "jsondiffpatch",
  "version": "0.0.7",
  "author": {
    "name": "Benjamin Eidelman",
    "email": "beneidel@gmail.com"
  },
  "description": "Diff & Patch for JSON object graphs",
  "contributors": [
    {
      "name": "Benjamin Eidelman",
      "email": "beneidel@gmail.com"
    }
  ],
  "bin": {},
  "scripts": {
    "test": "qunit -c ./src/jsondiffpatch.js -d jsondiffpatch:./src/jsondiffpatch -t ./test/test.js",
    "minify": "uglifyjs ./src/jsondiffpatch.js > ./jsondiffpatch.min.js"
  },
  "main": "./src/jsondiffpatch",
  "repository": {
    "type": "git",
    "url": "git://github.com/benjamine/JsonDiffPatch.git"
  },
  "keywords": [
    "json",
    "diff",
    "patch"
  ],
  "devDependencies": {
    "qunit": "0.5.x",
    "uglify-js": "1.3.x"
  },
  "bundleDependencies": [],
  "license": "MIT",
  "engine": {
    "node": ">=0.4"
  },
  "dependencies": {
    "cli-color": ">=0.1.7"
  },
  "optionalDependencies": {
    "cli-color": ">=0.1.7"
  },
  "engines": {
    "node": "*"
  },
  "homepage": "https://github.com/benjamine/JsonDiffPatch",
  "readme": "JsonDiffPatch\n=========\n\n*Diff & Patch for JavaScript objects and arrays (ie. any JSON serializable structure)*\n\nJsonDiffPatch is a small library that allows to diff object graphs, create a patch (in pure JSON), and apply it to update an original version.\n\nNow available on npm:\n```\nnpm install jsondiffpatch\n```\n-----\n**[DEMO](http://benjamine.github.com/JsonDiffPatch/demo/index.htm)**\n-----\n-----\n\n- Could be used for logging, audit, remote (client-server) synchronization of changes, etc.\n- Minified version is < 6KB\n- Works in browsers and server (Node.j or any CommonJS env), open [test page](http://benjamine.github.com/JsonDiffPatch/test/qunit.htm) to check other browsers.\n- Automatically detect environment support and load as CommonJS module (eg: node.js), anonymous AMD module (eg: using RequireJS on the browser, no globals), or as browser global.\n- For long text diffs uses [google-diff_match_patch](http://code.google.com/p/google-diff-match-patch/) library if loaded (other text diff libs can be plugged in)\n- Arrays diffs are smart!\n  - Using [LCS](http://en.wikipedia.org/wiki/Longest_common_subsequence_problem) (the same type of algorithm used by popular text diff tools on lines of text) insertions and deletions are detected efficiently.\n  - Also detects items moved on the same array (a refinement to LCS). Patching will only move the item in the array, and inner changes in the moved object are diffed/patched too.\n  - Works with objects in the array if you provide a hash function, eg: ``` jsondiffpatch.config.objectHash = function(obj) { obj.id || JSON.stringify(obj); }; ```).\n- Reverse a diff and unpatch (eg. revert object to its original state based on diff)\n- Optional lib included for visualizing diffs as html\n\nExample:\n\n``` javascript\n    // sample data\n    var country = {\n        name: \"Argentina\",\n        capital: \"Buenos Aires\",\n        independence: new Date(1816, 6, 9),\n        unasur: true\n    };\n  \n    // clone country, using dateReviver for Date objects\n    var country2 = JSON.parse(JSON.stringify(country),jsondiffpatch.dateReviver);\n     \n    // make some changes\n    country2.name = \"Rep�blica Argentina\";\n    country2.population = \"41324992\";\n    delete country2.capital;\n  \n    var delta = jsondiffpatch.diff(country,country2);\n    \n    /*\n    delta = {\n        \"name\":[\"Argentina\",\"Rep�blica Argentina\"], // old value, new value\n        \"population\":[\"41324992\"], // new value\n        \"capital\":[\"Buenos Aires\",0,0] // deleted\n    }\n    */\n  \n    // patch original \n    jsondiffpatch.patch(country, delta);\n\n    // reverse diff\n    var reverseDelta = jsondiffpatch.reverse(delta);\n    // also country2 can be return to original value with: jsondiffpatch.unpatch(country2, delta);\n\n    var delta2 = jsondiffpatch.diff(country,country2);\n    \n    // delta2 is undefined, no difference\n```\n\nArray diffing:\n\n``` javascript\n    // sample data\n    var country = {\n        name: \"Argentina\",\n        cities: [\n        {\n            name: 'Buenos Aires',\n            population: 13028000,\n        },\n        {\n            name: 'C�rdoba',\n            population: 1430023,\n        },\n        {\n            name: 'Rosario',\n            population: 1136286,\n        },\n        {\n            name: 'Mendoza',\n            population: 901126,\n        },\n        {\n            name: 'San Miguel de Tucum�n',\n            population: 800000,\n        }\n        ]\n    };\n\n    // clone country\n    var country2 = JSON.parse(JSON.stringify(country));\n\n    // delete C�rdoba\n    country.cities.splice(1, 1);\n\n    // add La Plata\n    country.cities.splice(4, 0, {\n        name: 'La Plata'\n        });\n\n    // modify Rosario, and move it\n    var rosario = country.cities.splice(1, 1)[0];\n    rosario.population += 1234;\n    country.cities.push(rosario);\n\n    // match objects by name\n    jsondiffpatch.config.objectHash = function(obj) {\n        return obj.name;\n    }\n\n    var delta = jsondiffpatch.diff(country,country2);\n    \n    /*\n    delta = {\n        \"cities\": {\n            \"1\": [\n                // inserted at index 1\n                {\n                    \"name\": \"C�rdoba\",\n                    \"population\": 1430023\n                }]\n            ,\n            \"2\": {\n                // population modified at index 2 (Rosario)\n                \"population\": [\n                    1137520,\n                    1136286\n                ]\n            },\n            \"_t\": \"a\",\n            \"_3\": [\n                // removed from index 3\n                {\n                    \"name\": \"La Plata\"\n                },0,0],\n            \"_4\": [\n                // move from index 4 to index 2\n                '',2,3]\n        }\n    }\n    */\n```\n\nFor more complex cases (nested objects or arrays, long text diffs) check unit tests in /test/test.js\n\nTo use as AMD module (eg: using RequireJS on the browser):\n\n    require('jsondiffpatch', function(jsondiffpatch){\n\n        // code using jsondiffpatch\n\n    });\n\n    // a module that depends on jsondiffpatch\n    define('mytexteditor.visualcomparer', ['jsondiffpatch'], function(jsondiffpatch){\n\n        // module implementation using jsondiffpatch\n\n    });\n\n\n\nTargeted platforms\n----------------\n\n* Tested on Chrome, FireFox, IE7+, to check other browsers open [test page](http://benjamine.github.com/JsonDiffPatch/test/qunit.htm) to run unit tests.\n* Node.js\n\n[QUnit](http://docs.jquery.com/Qunit) is used for unit testing. \nJust open the [test page](http://benjamine.github.com/JsonDiffPatch/test/qunit.htm) on your preferred browser. \n\nTo run tests on Node.js on jsondiffpatch root folder:\n\n```\n    npm i\n    npm test\n```\n\nMinification\n----------------\n\nA minified version is provided as jsondiffpatch.min.js\nTo regenerate that file run (npm i is required as uglifyjs is used):\n\n```\n    npm i\n    npm run-script minify\n```\n\nIncluding JsonDiffPatch in your application\n---------------\n\nInstall using npm:\n\n```\nnpm install jsondiffpatch\n```\n\nor, Download the latest release from the web site (http://github.com/benjamine/JsonDiffPatch) and copy \n`jsondiffpatch.min.js` to a suitable location. To support text diffs include Google's diff_match_patch.\n\nThen include it in your HTML\nlike so:\n\n    <script type=\"text/javascript\" src=\"/path/to/jsondiffpatch.min.js\"></script>\n    <script type=\"text/javascript\" src=\"/path/to/diff_match_patch_uncompressed.js\"></script>\n    \nNote: you can use JsonDiffPatch on browserless JavaScript environments too (as [Node.js](http://nodejs.org/), or [Mozilla Rhino](http://www.mozilla.org/rhino/)). \n\nOn Node.js you have to connect your text diff/patch library explicitly. eg:\n\n    var jsondiffpatch = require('./jsondiffpatch.js');\n    \n    // load google diff_match_patch library for text diff/patch \n    jsondiffpatch.config.diff_match_patch = require('./diff_match_patch_uncompressed.js');\n    \n    // use text diff for strings longer than 5 chars \n    jsondiffpatch.config.textDiffMinLength = 5;\n    \n    var d = jsondiffpatch.diff({ age: 5, name: 'Arturo' }, {age: 7, name: 'Armando' });\n    // d = { \n    //   age: [ 5, 7 ],\n    //   name: [ '@@ -1,6 +1,7 @@\\n Ar\\n-tur\\n+mand\\n o\\n', 0, 2 ] }\n    \n    console.log(d.name[0])\n    // prints: \n    // @@ -1,6 +1,7 @@\n    // Ar\n    // -tur\n    // +mand\n    //  o\n\n\nVisual Diff\n----------------\n\nTo visualize diffs you can include JsonDiffPatch.Html script + css on your page:\n\n    <script type=\"text/javascript\" src=\"/path/to/jsondiffpatch.html.js\"></script>\n    <link rel=\"stylesheet\" href=\"../src/jsondiffpatch.html.css\" type=\"text/css\" />\nNow you can use the jsondiffpatch.html.diffToHtml() function to visualize diffs as html:\n\n```\n    var json1 = JSON.parse($('#json1').val());\n    var json2 = JSON.parse($('#json2').val());\n    var d = jsondiffpatch.diff(json1, json2);\n    $('#myvisualdiffcontainer').empty().append(jsondiffpatch.html.diffToHtml(json1, json2, d));\n```\n\nTo see this in action check the [DEMO](http://benjamine.github.com/JsonDiffPatch/demo/index.htm) page.\n\nAlso you can generate diffs with jsondiffpatch on your console:\n\n```\njsondiffpatch .\\test\\testdata.json .\\test\\testdata2.json\n```\n",
  "readmeFilename": "README.md",
  "_id": "jsondiffpatch@0.0.7",
  "dist": {
    "shasum": "de8a2f6f42886b9b1dd5148f8e29d33f8336be05"
  },
  "_from": "jsondiffpatch"
}
